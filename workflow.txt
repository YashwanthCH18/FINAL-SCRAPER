i am building a project about social media automation for B2B,i am using next js in the frontend and in the backend i am using  python langgraph along with fast api to connect to the frontend and the databases i am using are supabase,pineconce and cloudflare r2 and for deployment i am using vercel along with aws lambda and i want microservices architecture so have divided my backend into different stacks and are deployed as different stacks in the same account the stacks are scraper stack,blog stack,linkedin stack and video generator stack,i will tell u the flow of the project now


first the customer will land on landing page, then he will have a get started button, on clicking that he will be redirected to signup which has a form as well as signup with google
i am using supabase for authentication and in that the fields i have is
uid
Display name
Email
phone
providers
provider type
created at
last sign in at

these are the fields and its using the default auth table of supabase i think
we  arent using the phone field at all and providers type will only be used when they login with google

and after login the user will be displayed the following 5 questions:-
1:-What is your product/service?
2:-Who are your ideal customers?
3:-What problem do you solve?
4:-What's your unique style?
5:-Where do you want to post?

these 5 questions will be stored in supsbase in a table called onboarding
which contains the following fields
id
userid
question1
question2
question3
question4
question5
completed
createdat
updatedat

once the user enters the data,in the backend the scraper stack will activate and scrape data regarding the customer and store it in the pinecone with specific chunk size and for seperating the different customers data we are using the meta data obtained by supabase such as userid and display name which can be obtained from the JWT token generated by supabase to seperate the chunks of different people
in the frontend once the user answers these questions the user will be redirected to dashboard which will contain 3 cards, blog,linked in and video generator

lets start with blogs and blog stack:-

which will have a auto generator button and manual generation button,
when they click on auto generate based on the stored data and the tone,length and additional instructions specified on the frontend by the user when they click on blog generation the blog will be generated 
in manual generation everything will be same in frontend except they will have a additional prompt box where they specify the topic and based on that topic it should call the scraper stack, scrape data and store the data in pinecone and once the blog is generated the blog is shown in the frontend in a blog editor component where they can edit the blog and embed images and modify the blog, for now a rough schema of how the blogs would be stored especially for SEO

**`blog_posts` Table:**

- `id` (UUID primary key)
- `user_id` (UUID foreign key)
- `title` (SEO-optimized H1, 55-60 chars max)
- `slug` (URL-friendly path with keywords)
- `html_content` (full content with proper heading hierarchy)
- `meta_description` (SEO meta description, 150-160 chars)
- `meta_keywords` (array from research keywords)
- `canonical_url` (full URL for canonical reference)
- `subdomain` (customer-specific subdomain)
- `published_at` (timestamp)
- `status` (draft, published, scheduled)
- `featured_image_url` (main image URL)
- `featured_image_alt` (alt text for main image)

**`blog_seo` Table:**

- `id` (UUID primary key)
- `blog_id` (UUID foreign key to blog_posts)
- `schema_markup` (JSON-LD schema for rich snippets)
- `heading_structure` (H1/H2/H3 structure)
- `focus_keyword` (primary SEO target keyword)

outer blog stack

once the blog is generated, in frontend the user will have the options to modify the blog as well as add images to the blog and then publish it, once clicked on publish it shd be published in their subdomain given by us, such as customername.myname.com, which will have main blog home page, which shows all the blogs in tiles when clicked on a tile that particular blog will be displayed in depth


linkedin:-

when they click on linkedin card in dashoard they will be routed to blog page, where the user can choose between normal post,carousal post and then based on the parameters chosen on the frontend for tone and length along with blog taken from supabase generated by the blog stack the post will be created, once its generated then its shown in editor in frontend where the user can modify the ipost as well as add images and other things and once they approve and click on send its automatically posted on their linkedin account

the video generator stack will be thought later



 
 
 
